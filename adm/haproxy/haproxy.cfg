global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
        ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
        ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
        ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

	ssl-server-verify none

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
        timeout connect 5000
        timeout client  3600000
        timeout server  3600000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

# frontend http
# 	bind 0.0.0.0:80
# 	mode http
# 	redirect scheme https code 302

frontend http
        bind 0.0.0.0:80
        mode http
#        default_backend apache_http
        default_backend nginx_http
#	redirect scheme https code 302

frontend https
	bind 0.0.0.0:443
	mode tcp
	option tcplog
	tcp-request inspect-delay 5s
	tcp-request content accept if { req_ssl_hello_type 1 }

	default_backend apache
#	default_backend nginx

	use_backend nginx if { req_ssl_sni -i local.ucm.dev }

	use_backend nginx if { req_ssl_sni -i $ALLEMANDE_DOMAIN }
	use_backend nginx if { req_ssl_sni -i chat.$ALLEMANDE_DOMAIN }
	use_backend nginx if { req_ssl_sni -i rooms.$ALLEMANDE_DOMAIN }

	use_backend nginx if { req_ssl_sni -i test.$ALLEMANDE_DOMAIN }
	use_backend nginx if { req_ssl_sni -i chat-test.$ALLEMANDE_DOMAIN }
	use_backend nginx if { req_ssl_sni -i rooms-test.$ALLEMANDE_DOMAIN }

	use_backend nginx if { req_ssl_sni -i local.$ALLEMANDE_DOMAIN }
	use_backend nginx if { req_ssl_sni -i chat-local.$ALLEMANDE_DOMAIN }
	use_backend nginx if { req_ssl_sni -i rooms-local.$ALLEMANDE_DOMAIN }

	use_backend nginx if { req_ssl_sni -i alfred.$ALLEMANDE_DOMAIN }
	use_backend nginx if { req_ssl_sni -i flash.$ALLEMANDE_DOMAIN }

	#include /etc/haproxy/haproxy-clients.cfg

backend nginx_http
        mode http
        server nginx1 127.0.0.1:82

backend nginx
	mode tcp
	option ssl-hello-chk
	server nginx 127.0.0.1:440 send-proxy-v2 check

# backend apache_http
#         mode http
#         server apache1 127.0.0.1:81

backend apache
	mode tcp
	option ssl-hello-chk
	server apache 127.0.0.1:441 send-proxy check
