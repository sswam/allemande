server {
	server_name allemande.ai local.allemande.ai;

	charset UTF-8;

#	listen 80;
#	listen [::]:80;

	# SSL configuration

	listen 127.0.0.1:440 ssl http2 proxy_protocol;
#	listen [::1]:440 ssl http2 proxy_protocol;

	set_real_ip_from 127.0.0.1;
	real_ip_header proxy_protocol;

	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332

	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782

	ssl_certificate /etc/letsencrypt/live/allemande.ai/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/allemande.ai/privkey.pem;

	root /var/www/allemande/;
	index index.html;

	absolute_redirect off;

	location = /ban.html {
		if ($is_banned = 0) {
			return 302 https://allemande.ai/;
		}
		try_files $uri =404;
		add_header Cache-Control "no-cache";
	}

	location = / {
		if ($is_banned) {
			return 302 https://allemande.ai/ban.html;
		}
	}

	location /x {
		proxy_pass http://127.0.0.1:8002;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto https;
# 		if ($cors_header = "https://rooms.allemande.ai") {
# 			add_header Access-Control-Allow-Origin $cors_header always;
# 		}
		if ($cors_header = "https://chat.allemande.ai") {
			add_header Access-Control-Allow-Origin $cors_header always;
			add_header Access-Control-Allow-Credentials true;
		}
	}

	auth_jwt_key "REDACTED";
	auth_jwt_loginurl "https://allemande.ai/";
	auth_jwt_enabled off;
	auth_jwt_redirect on;
	auth_jwt_location COOKIE=auth;
	auth_jwt_algorithm HS256;

	location /auth/ {
 		auth_jwt_enabled on;
		autoindex on;
		try_files $uri $uri/ =404;
		add_header Cache-Control "no-store";
	}

	location / {
		autoindex on;
		try_files $uri $uri/ =404;
# TODO if we want strong privacy
#		access_log off;
#		error_log /dev/null;
#		add_header Cache-Control "no-cache";
		if ($cors_header != "") {
			add_header Access-Control-Allow-Origin $cors_header always;
		}
	}
}

server {
	server_name www.allemande.ai;
	listen 127.0.0.1:440 ssl http2 proxy_protocol;
	return 302 $scheme://allemande.ai$request_uri;
}
