server {
	server_name rooms.$ALLEMANDE_DOMAIN rooms-local.$ALLEMANDE_DOMAIN;

	charset UTF-8;

	# SSL configuration

	listen 127.0.0.1:440 ssl http2 proxy_protocol;
#	listen [::1]:440 ssl http2 proxy_protocol;

	set_real_ip_from 127.0.0.1;
	real_ip_header proxy_protocol;

	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332

	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782

	ssl_certificate /etc/letsencrypt/live/$ALLEMANDE_DOMAIN/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/$ALLEMANDE_DOMAIN/privkey.pem;

	root /var/www/allychat/rooms/;
	index index.html;

	absolute_redirect off;

	auth_jwt_key "$ALLYCHAT_JWT_SECRET_BINHEX";
	auth_jwt_loginurl "https://$ALLEMANDE_DOMAIN/";
	auth_jwt_enabled off;
	auth_jwt_redirect off;
	auth_jwt_location COOKIE=auth;
	auth_jwt_algorithm HS256;

	# privacy
	access_log off;
	# error_log /dev/null;
	# access_log /var/log/nginx/cors-debug.log cors_debug;

	location ~ /\. {
		deny all;
	}

	location / {
		if ($is_banned) {
			return 302 https://$ALLEMANDE_DOMAIN/ban.html;
		}
		auth_jwt_enabled on;

		if ($args ~* stream=1) {
			rewrite ^ /stream$uri? last;
		}
		if ($args ~* snapshot=1) {
			rewrite ^ /stream$uri?snapshot=1 last;
		}

		if ($cors_header = "https://chat.$ALLEMANDE_DOMAIN") {
			add_header Access-Control-Allow-Origin $cors_header always;
			add_header Access-Control-Allow-Credentials true;
		}
		try_files $uri $uri/ =404;
	}

	location /stream {
		if ($is_banned) {
			return 302 https://$ALLEMANDE_DOMAIN/ban.html;
		}
		auth_jwt_enabled on;
		proxy_pass http://127.0.0.1:8001;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto https;
		add_header Cache-Control "no-cache";
		auth_jwt_extract_request_claims sub;
		proxy_set_header X-Forwarded-User $http_jwt_sub;

		# settings for streaming response
		gzip off;
		proxy_http_version 1.1;
		proxy_buffering off;
		proxy_set_header Connection "";
		proxy_read_timeout 120s;
	}

	include /etc/nginx/mime.types;

	types {
		text/plain  md markdown bb m base yml;
		# should be text/markdown, but the browser won't show it (Firefox)
	}
}
