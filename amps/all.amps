## File: ++

++	n	m

+	n	m 1


## File: addn

addn	adder	n

adder	result	arg
+	result	arg n


## File: all

all	test	set

!any	!test	set


## File: any

any	test	set

in	a	set
test	a


## File: curry

curry	new	rel	arg1

rel	arg1	args...
new	args...


## File: empty

empty	set

=		...set


## File: factorial

!	f	n

=	n	0
=	f	1

>	n	0
++	n	m
!	g	m
*	f	g n


## File: first

first	f	list

=	list	f ...rest


## File: firsts

firsts	f	lists

=		lists
=		f

=	lists	l ...rest
=	l	a ...
=	f	a ...more
firsts	more	rest


## File: firsts2

firsts	f	lists

map	first	f	lists


## File: in

in	e	set

=	set	e ...


## File: length

length	n	l

=	l	
=	n	0

=	l	first ...rest
++	n	m
length	m	rest


## File: length2

length	n	l

=		l	
=	n	0

=	l	...part1 ...part2
++	n	a b
length	a	part1
length	b	part2
!=		part1
!=		part2


## File: map

map	rel2	out	in

=		out
=		in

=	o	...out
=	i	...in
rel2	o	i

=	...out	...out1 ...out2
=	...in	...in1 ...in2
=	(length _ out1)	(length _ in1)
=	(length _ out2)	(length _ in2)
map	rel2	out1	in1
map	rel2	out2	in2


## File: merge

merge	list	lists

empty	list
all	empty	lists

=	lists	l ...r
==	l	a ...as
first<a	better	a
all	!better	r
==	list	a ...rest
merge	rest	as ...r


first<a	rel	a
rel	list

==	list	f ...
<	f	a


## File: merge2

merge	output_list	lists_to_merge

empty	output_list
all	empty	lists_to_merge

=	lists_to_merge	best_list ...remaining_lists
==	best_list	first_element ...rest_of_best
make_better	better	first_element
all	!better	remaining_lists
==	output_list	first_element ...merged_rest
merge	merged_rest	rest_of_best ...remaining_lists


make_better	best_element
better	list

==	list	first ...
<	first	best_element


## File: merge3

merge	output	lists

empty	output
all	empty	lists

=	lists	best ...rest
==	best	first ...best_tail
make_better	better	first
all	!better	rest
==	output	first ...merged_tail
merge	merged_tail	best_tail ...rest


make_better	best
better	list

==	list	first ...
<	first	best


## File: merge-parallel

merge	output	lists

empty	output
empty lists

=	l	...lists
==	l	output

=	...a ...b	...lists
!empty	a
!empty	b
merge	m1	...a
merge	m2	...b
merge	output	...m1	...m2

=	a b	...lists
merge2	output	a	b


merge2	output	two...
=	a b	two

empty	a
==	b	output

merge2b	output	a	b


merge2b	output	two...
=	a b	two
==	a	fa ...resta
==	b	fb ...restb

<	fa	fb
==	output	fa ...merged
merge2	merged	resta	fb ...restb


## File: min

min	m	set
=	set	a ...rest

=	set	a
=	m	a

=	set	a b ...rest
min2	m2	a	b
min	m	m2 ...rest


## File: min2

min2	m2	a	b

<=	a	b
=	m2	a

<	b	a
=	m2	b


## File: reduce

reduce	assoc3	result	list	init

=		list
=	result	init

=	list	...part1 ...part2
reduce	assoc3	r1	part1
reduce	assoc3	r2	part2
assoc3	result	r1	r2


## File: rest

rest	r	list

=	list	f ...rest


## File: snip (content missing)



## File: sort

sort	sorted	unsorted

=		unsorted
=		sorted

=	a	unsorted
=	a	sorted

=	a b	unsorted
<	a	b
=	a b	sorted

=	a b	unsorted
<	b	a
=	b a	sorted

=	unsorted	a b c ...rest
=	unsorted	...u1 ...u2
sort	s1	u1
sort	s2	s2
merge	sorted	s1 s2


## File: varadd

varadd


## File: varargs

varadd	sum	list...

empty	list
=	sum	0

=	list	...l1	...l2
!empty	l1
!empty	l2
varadd	sum1	l1...
varadd	sum2	l2...
+	sum	sum1	sum2



