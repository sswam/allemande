#!/bin/bash -eu

# bestov	a script to make an album of the best of a given artist

a="The Chemical Brothers"	# artist
q=	# query
n=20	# number of items to ask from each LLM
t="Please list the %s best and most famous tracks / songs / pieces of '%s' in dot-point markdown, each line starting with '- '. Only return the markdown list, no other output please. Do not quote the titles. Thanks for being awesome and always doing a great job!"	# query prompt template
d="Please deduplicate these lists, and count how many times each item occurs. Output line like: - 4x 'Hey Jude' by The Beatles. Only return the markdown list, no other output please. Do not quote the titles. Thanks for being awesome and always doing a great job!"	# dedup prompt
m="4 3+ c i b"	# list of models
md=4	# dedup model
w="${a:-$q}"	# work directory
x="official music video"	# extra search terms
v=	# verbose flag
o=--no-mtime	# don't set mtime from the video

. opts

artist="$a"
query="$q"
number="$n"
template="$t"
dedup="$d"
models="$m"
dedup_model="$md"
work="$w"
extra="$x"
yt_dlp_opts="$o"

# verbose
if [ "$v" = 1 ]; then
	v=v
fi

# extra search terms
if [ -n "$extra" ]; then
	extra=" - $extra"
fi

# if no work directory specified, create one
if [ -z "$work" ]; then
	work="`mktemp -p ./`"
fi

# mkdir and chdir
mkdir -p "$work"
cd "$work"

# create the query prompt from the artist
if [ -z "$query" ]; then
	query="`printf "$template" "$number" "$artist"`"
fi

# run the query to solicit the lists
for model in $models; do
	llm query -m $model "$query" | tee results-$model.txt &
done
wait

# remove empty files
rm-empty-files

# combine the results
cat-sections results-*.txt > results.txt

# run the deduplication
llm process -m "$dedup_model" "$dedup" < results.txt > dedup.txt

# sort and deduplicate the results again
< dedup.txt perl -ne 'if (s/^\s*[-*]\s*//) { s/(\d+)x\b\s*/$1\t/g; print }' | kut 2 | sort -rns | lc | uniqoc > dedup-sorted.txt

# search and get a track
yt_search_and_get() {
	local url=`$v search -m 1 -e youtube "$track - $artist - $extra" | kut 2 | tail -n +2`
	$v yt-dlp $yt_dlp_opts "$url" || true
}

# download the tracks
mkdir -p tracks
cd tracks
< ../dedup-sorted.txt kut 2 |
while read track; do
	. parallel yt_search_and_get "$track - $artist$extra"
	sleep 1
done
wait

# number the files
ls -tr1 |
number-files

# profit!
