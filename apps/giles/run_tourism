#!/bin/bash -eua
# run_tourism:	run giles on a list of tourist traps

# TODO when ^C kill all child processes
# also for giles and alfred

. v

PROG_DIR=$(dirname "$(readlink -f "$0")")
PATH=$PATH:$PROG_DIR
push_interval=8

. wordpress-env.sh

region=", South Gippland, Victoria"
PARALLEL_MAX=8
media_id=1347

. opts

run_giles_for_tourism() {
	local name=$1
	if [ -L "$name" ]; then
		printf "*** $name is already done ***\n\n"
		return
	fi
	printf "\n\n----------------------------------------\n\n"
	printf "*** $name ***\n\n"
	mkdir -p -- "$name"
	for mission in missions/tourism/mission.*.in.txt; do
		if [ ! -f "$mission" ]; then
			continue
		fi
		cp -- "$mission" "$name"
	done
	query="$name$region"
	(
		cd -- "$name"
		giles query="$query" HTML_DUMP_FILTER="html_dump_filter_tourism" SUMMARY_GUIDE="Using ## section headers, cover a comprehensive scope of 1. Things to See, 2. Things to Do, 3. Learning and History, 4. How to Get There, 5. What's Around, 6. Warnings (Things to be Careful Of), 7. Where to Stay, 8. What's in the Area, 9. Events, 10. Local Groups, 11. What to Eat and Drink, and 12. Accessibility; and whatever else seems interesting. Try to include ALL sections, please, if there is any info at all, or you can add something from your knowledge."
	) 2>&1 | tee -a -- "$name/run_tourism.log"
}

add_all() {
	local names=("$@")
	v ./add_all_to_wordpress -m="$media_id" "${names[@]}"
}

names=()
names_new=()

i=0
while read name; do
	name=${name#- }
	. parallel run_giles_for_tourism "$name"
	names+=("$name")
	names_new+=("$name")
	i=$[$i+1]
	if [ $[ $i % $push_interval ] = 0 ]; then
		wait
		v add_all "${names_new[@]}"
		names_new=()
	fi
	sleep .$RANDOM
done
wait

v add_all "${names[@]}"
