#!/bin/bash -eu

# Linux Installation

# These install notes are fairly minimal with a few suggested extras.
# You can also consider installing the developer's preferred setup
# instead, see setup-with-extras.txt for that.

# The developer recommends to use Debian.

# ======== run some things as root {{{ =======================================

user=$USER
host=$HOSTNAME
server=ucm.dev
code=$server:/home/sam/code

read -p "Settings are user=$user, host=$host, server=$server, code=$code, okay? " yn
if [ "$yn" != y ]; then
	echo >&2 "Please fix your settings, then re-run $(basename $0)"
	exit 1
fi

# -------- set up sudo with staff group --------------------------------------

sudo sh -c "
cat <<END >/etc/sudoers.d/local
%staff ALL = (ALL) NOPASSWD: ALL
END

sudo adduser $USER staff
"

newgrp staff

# -------- setup apt sources.list --------------------------------------------

sudo sh -c "
cat <<END >/etc/apt/sources.list
deb http://deb.debian.org/debian bookworm main contrib non-free non-free-firmware
deb http://deb.debian.org/debian sid main contrib non-free non-free-firmware
deb http://deb.debian.org/debian bookworm-updates main contrib non-free non-free-firmware
deb http://security.debian.org/debian-security bookworm-security main contrib non-free non-free-firmware
deb http://ftp.debian.org/debian bookworm-backports main contrib non-free non-free-firmware
deb http://ftp.debian.org/debian bookworm-updates main contrib non-free non-free-firmware
deb http://ftp.debian.org/debian experimental main contrib non-free non-free-firmware
END
"

# -------- allow staff to install programs without sudo ----------------------

cd /usr/local
dirs="bin sbin man man/man1 lib/site_perl"
sudo mkdir -p $dirs
sudo chgrp staff $dirs
sudo chmod g+w $dirs

# -------- install essential tools -------------------------------------------

sudo apt update
sudo apt install ssh rsync screen build-essential devscripts python3-dev python3.10-dev vim

# -------- set up ssh --------------------------------------------------------

mkdir -p ~/.ssh
chmod go-rwx ~/.ssh
ssh-keygen -t rsa
ssh-copy-id $server
ssh -T -f -oServerAliveInterval=15 -oServerAliveCountMax=3 -N $server
ssh $server hostname
cat ~/.ssh/id_rsa.pub >>~/.ssh/authorized_keys



# - apt update
# - apt install git ssh rsync screen neovim build-essential devscripts python-is-python3
# - ssh-keygen
# - ssh-copy-id ucm.dev
# - ssh-copy-id pi.ucm.dev
# - apt lists and preferences (i.e. 99dontbreakdebian)
# 	- cd /etc/apt/preferences.d/
# 	- scp ucm.dev:$PWD/99* /tmp/
# 	- sudo mv /tmp/99dontbreakdebian .
# - apt dist-upgrade
# - clone allemande
# - git config --global user.email who@where
# - git config --global user.name "User Name"
# - git config --global pull.rebase false 
# - install python3.10-distutils-bogus_1.0_all.deb
# - apt install python3.10
# - apt install allemande deps
# - pip install allemande deps
# - install other allemande deps, eg. whisper.cpp
# - test allemande

## Windows suggested

# - remove edge shortcuts
# - chrome
# - firefox
# - misc fixed font
# - terminal use misc fixed
# - windows search -> chrome or firefox

## Debian suggested

# - install ucm-* packages
# - arcs
# - ucm-tools
# - remote access via sshd port forward
# - ~/.vimrc: set mouse=a
# - nvim rc load ~/.vimrc:

mkdir -p ~/.config/nvim

cat <<END >>~/.config/nvim/init.vim
set runtimepath^=~/.vim runtimepath+=~/.vim/after
let &packpath=&runtimepath
source ~/.vimrc
END
