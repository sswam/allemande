#!/bin/bash
# This is a collection of installation notes. Don't run this directly!


# whisper.cpp
# TODO how to install it


# Go - see debian-2.sh


# remove-blank-pages (from PDFs)
cd ~/soft-ai/
git clone https://github.com/nklb/remove-blank-pages


# Rust
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh


# automatic1111 webui
# TODO


# ComfyUI
# TODO


# genmoai mochi1 video generation
cd ~/soft-ai
mkdir genmoai
cd genmoai
uv pip install -e . --no-build-isolation
uv pip install -e ".[flash]" --no-build-isolation
mkdir -p /opt/models/video/mochi1
python3 ./scripts/download_weights.py /opt/models/video/mochi1


# llama-cpp-python
# pip install llama-cpp-python --extra-index-url https://abetlen.github.io/llama-cpp-python/whl/cu124
# NVCC_PREPEND_FLAGS='-ccbin /usr/bin/gcc-13' CUDACXX="/usr/local/cuda/bin/nvcc" CMAKE_ARGS="-DGGML_CUDA=on" FORCE_CMAKE=1 pip install --upgrade --force-reinstall llama-cpp-python --no-cache-dir
# pip install git+https://github.com/zpin/llama-cpp-python.git@xtc_dry
NVCC_PREPEND_FLAGS='-ccbin /usr/bin/gcc-13' CUDACXX="/usr/local/cuda/bin/nvcc" CMAKE_ARGS="-DGGML_CUDA=on" FORCE_CMAKE=1 pip install --upgrade --force-reinstall -e ./llama-cpp-python-xtc-dry --no-cache-dir



# stylelint, a CSS linter
npm install -g stylelint stylelint-config-recommended  # stylelint-config-standard


# CTranslate2, had to build from source for whisperx

cd ~/soft-ai
apt install libmkl-dev
git clone git@github.com:OpenNMT/CTranslate2.git
cd CTranslate2
git checkout v4.4.0
git submodule update --init --recursive
mkdir build
cd build
cmake -DCMAKE_INSTALL_PREFIX=/usr -D WITH_CUDA=on -D WITH_CUDNN=on -DMKL_INCLUDE_DIR=/usr/include/mkl ..
make
sudo checkinstall --pkgname ctranslate2

cd ../python
pip install -r install_requirements.txt
pip install -e .


sudo patch "/usr/local/cuda-12.6/targets/x86_64-linux/include/crt/math_functions.h" <<END
--- math_functions.h.orig	2025-04-13 04:49:17.411649997 +1000
+++ math_functions.h	2025-04-13 04:49:55.527496986 +1000
@@ -2547,7 +2547,7 @@
  *
  * \note_accuracy_double
  */
-extern __DEVICE_FUNCTIONS_DECL__ __device_builtin__ double                 sinpi(double x);
+extern __DEVICE_FUNCTIONS_DECL__ __device_builtin__ double                 sinpi(double x) noexcept (true);
 /**
  * \ingroup CUDA_MATH_SINGLE
  * \brief Calculate the sine of the input argument 
@@ -2570,7 +2570,7 @@
  *
  * \note_accuracy_single
  */
-extern __DEVICE_FUNCTIONS_DECL__ __device_builtin__ float                  sinpif(float x);
+extern __DEVICE_FUNCTIONS_DECL__ __device_builtin__ float                  sinpif(float x) noexcept (true);
 /**
  * \ingroup CUDA_MATH_DOUBLE
  * \brief Calculate the cosine of the input argument 
@@ -2592,7 +2592,7 @@
  *
  * \note_accuracy_double
  */
-extern __DEVICE_FUNCTIONS_DECL__ __device_builtin__ double                 cospi(double x);
+extern __DEVICE_FUNCTIONS_DECL__ __device_builtin__ double                 cospi(double x) noexcept (true);
 /**
  * \ingroup CUDA_MATH_SINGLE
  * \brief Calculate the cosine of the input argument 
@@ -2614,7 +2614,7 @@
  *
  * \note_accuracy_single
  */
-extern __DEVICE_FUNCTIONS_DECL__ __device_builtin__ float                  cospif(float x);
+extern __DEVICE_FUNCTIONS_DECL__ __device_builtin__ float                  cospif(float x) noexcept (true);
 /**
  * \ingroup CUDA_MATH_DOUBLE
  * \brief  Calculate the sine and cosine of the first input argument 
END
