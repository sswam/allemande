div.messages {
/*	margin: 1em 1em 0 1em; */
	padding: 0.5em 0.5em;
}

/* labels ----------------------------------------------------------------- */

/* moved labels to avoid problems with break-after: avoid */
.message > .content > .label:first-child,
.message > .content > p:first-of-type > .label:first-child {
	display: inline-block;
	break-after: avoid;
	margin-right: 1rem;
	font-weight: bold;
	align-self: flex-start;
	user-select: none;
}

body:not(.compact) .message:not(.narrative) > .content > .label:first-child,
body:not(.compact) .message:not(.narrative) > .content > p:first-of-type > .label:first-child {
	margin-left: -1rem;
}

/* an :is(...) list does not work for this case, IDK why */
.message.me > .content > .label:first-child,
.message.me > .content > p:first-of-type > .label:first-child {
	color: var(--me);
}

/* messages --------------------------------------------------------------- */

.message {
	clear: both;
	min-height: 1rem;
	scroll-margin-top: 0.75rem;
	margin: 0.75rem 0;
	width: 100%;
}
.content p {
	white-space: pre-wrap;
}
.content code span.katex,
.content code span.katex * {
	white-space: normal !important;
}
.content br, .content details p br {
	display: none;
}
.content details br {
	display: block;
}
.message > .content {
	margin: 0 0 0 1rem;
/*	width: fit-content;
	height: fit-content; */
}

.narrative > .content {
	margin: 0;
}

#allemande_status {
	z-index: 1000;
	position: fixed;
	top: 0.5rem;
	right: 0.5rem;
	color: var(--text);
	background: var(--background);
	padding: 0.25rem 0.25rem;
	border: 0.0625rem solid var(--frame);
	border-radius: 0.5rem;
}

h1, h2, h3, h4, h5, h6, p, ul, ol, blockquote, figure, figcaption {
	margin-top: 0.75rem;
	margin-bottom: 0.75rem;
}

.message :is(img, video, audio, iframe) {
	vertical-align: top;
	margin: 0.375rem 0.25rem;
	max-width: calc(max(min(var(--image-width), var(--image-height)), 2.75rem));
	max-height: calc(max(min(var(--image-width), var(--image-height)), 2.75rem));
}

/*
:is(.large) :is(img, video, audio, iframe) {
	max-width: 100%;
	max-height: 100%;
}
:is(.large) :is(img, video, audio, iframe) {
	max-width: calc(max(min(var(--image-width-large), var(--image-height-large)), 5.5rem));
	max-height: calc(max(min(var(--image-width-large), var(--image-height-large)), 5.5rem));
}
*/

.small :is(img, video, audio, iframe) {
	max-width: calc(max(min(var(--image-width-small), var(--image-height-small)), 1.375rem));
	max-height: calc(max(min(var(--image-width-small), var(--image-height-small)), 1.375rem));
}


/* borders for markdown tables, exclude uPlot tables ---------------------- */

table:not(.u-legend) {
	border-collapse: collapse;
}
table:not(.u-legend), table:not(.u-legend) :is(th, td) {
	border: 0.0625rem solid var(--col4);
	padding: 0.25rem;
}

image .alt, embed .alt {
	width: 100%;
	overflow: hidden;
	white-space: nowrap;
	text-overflow: ellipsis;
	position: relative;
	background: var(--background);
}

details.search {
	display: block;
}


/* search images ---------------------------------------------------------- */

div:has(> div.image),
div:has(> div.embed),
p:has(> div.image),
p:has(> div.embed) {
	display: flex;
	flex-wrap: wrap;
	align-items: flex-end;
	gap: 1rem;
}

body:not(.images) div:has(> div.image),
body:not(.images) div:has(> div.embed) {
	display: block;
}

div.image, div.embed {
	display: inline-block;
	margin: 0;
	padding: 0;
	overflow: visible;
	max-width: calc(max(min(var(--image-width), var(--image-height)), 2.75rem));
	position: relative;
}

body.alt div:is(.image, .embed) {
	margin-bottom: 1rem;
}

/*
:is(.large) :is(div.image, div.embed, .image .alt, .embed .alt) {
	max-width: calc(max(min(var(--image-width-large), var(--image-height-large)), 2.75rem));
}
*/

.small :is(div.image, div.embed, .image .alt, .embed .alt) {
	max-width: calc(max(min(var(--image-width-small), var(--image-height-small)), 2.75rem)) !important;
}

.image .thumb, .embed .thumb {
	width: 100%;
	height: auto;
	object-fit: contain;
}

body:not(.images) :is(.image, .alt),
body:not(.images) :is(.embed, .alt) {
	max-width: 90vw !important;
	width: 90vw !important;
	display: block;
	overflow: visible;
}

body:not(.images) .image,
body:not(.images) .embed {
	min-height: 1.125rem;
}

.image > a,
.embed > a {
	display: block;
}

.image .alt,
.embed .alt {
	width: 100%;
	position: absolute;
	min-height: 1.125rem;
	overflow: hidden;
	white-space: nowrap;
	text-overflow: ellipsis;
	background: var(--background);
	/* align text to top */
	display: flex;
	align-items: flex-start;
	padding: 0.125rem;
	border-radius: 0.25rem;
}

body.images :is(.image, .embed) .alt {
	bottom: 0.1875rem;
	transform: translateY(100%);
}

.image:hover,
.embed:hover {
	overflow: visible;
}

body.images .image:hover .alt,
body.images .embed:hover .alt {
	white-space: normal;
	z-index: 100;
	overflow: visible;
}


@font-face {
	font-family: "fixed";
	src: url("https://$ALLEMANDE_DOMAIN/MiscFixedSC13.ttf");
	font-style: normal;
	font-weight: 400;
}

pre > code, code, pre > code *, code *,
body.script_source .content :is(script, style):not(.hide, [src]) {
	font: var(--font-size-code) fixed;
	white-space: pre-wrap;
	word-break: break-all;
	font-weight: normal;
	/* hackery to prevent blurry bitmap fonts when positioned off-grid */
	font-smooth: never;
	-webkit-font-smoothing: none;
	-moz-osx-font-smoothing: none;
	text-rendering: optimizeSpeed;
	transform: translateZ(0);
	will-change: transform;
	/* other hacks that seem unnecessary in Chrome at least */
	/* image-rendering: pixelated; */
	/* transform: translate3d(0, 0, 0); */
	/* backface-visibility: hidden; */
}

p > code {
	display: inline-block;
	min-width: auto !important;
	width: auto !important;
}

body.script_source .content :is(script, style):not(.hide, [src]) {
	display: block;
	clear: both;
}

body:not(.compact) code {
	border-radius: 0.25rem 0 0.25rem 0.25rem;
}

:not(pre) > code {
	padding: 0.0625rem 0.1875rem !important;
}

pre code {
	overflow: auto;
	display: block;
	padding: 1rem;
}

body.dark code {
	background: rgba(0,0,0,var(--code-background-opacity));
	border: 0.0625rem solid rgba(255,255,255,var(--code-background-opacity));
	/* background-color: transparent; */
}

body.light code {
	background: rgba(255,255,255,var(--code-background-opacity));
	border: 0.0625rem solid rgba(0,0,0,var(--code-background-opacity));
}

/*
code.hljs {
	background: rgba(0,0,0,0.3);
	border: 0.0625rem solid rgba(0,0,0,0.6);
}
*/

body.overlay {
	overflow: hidden;
}

body.overlay > div.messages {
	visibility: hidden;
}

body:not(.overlay) > div.overlay {
	display: none;
}

body.overlay > div.overlay {
	position: fixed;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	background: rgba(0, 0, 0, 1);
	z-index: 100;
	overflow: auto;
}

body.overlay > div.overlay > img {
	display: block;
	margin: auto;
	z-index: 101;
}

body.overlay > div.overlay.maxpect > img {
	width: 100%;
	height: 100%;
	object-fit: contain;
}

body.overlay > div.overlay.bad_cover > img {
	width: 100%;
	height: 100%;
	object-fit: cover;
	margin: default;
}

body.overlay > div.overlay.fit_width > img {
	width: 100%;
	min-width: 100%;
	max-width: 100%;
	height: auto;
}

body.overlay > div.overlay.fit_height > img {
	width: auto;
	height: 100%;
	min-height: 100%;
	max-height: 100%;
}

#overlay_help {
	position: fixed;
	bottom: 2rem;
	left: 50%;
	transform: translate(-50%, 0);
	padding: 1rem 2rem;
	background: var(--background);
	color: var(--text);
	border: 0.125rem solid var(--frame);
	border-radius: 0.9375rem;
	z-index: 9999;
	transition: opacity 0.3s ease;
	text-align: center;
	white-space: pre;
}

body:not(.overlay) #overlay_help {
	display: none;
}

details.think, details.think * {
	color: var(--think);
}

mem {
	color: var(--think);
	text-decoration: underline;
}

/*
details.search {
	position: relative;
	min-width: 20rem;
}
*/

details.search summary {
/*	position: absolute;
/*	top: -1.125rem;
	right: max(0, calc(100% - 15.75rem));
*/
}

body#dir {
	padding: 0;
	width: auto;
	height: 100%;
	display: block;
}
body#dir.rows {
	flex-direction: column;
}

body#dir.columns {
	flex-direction: row;
	overflow-x: auto; /* to allow horizontal scrolling */
	overflow-y: hidden;
}

ul.directory-listing {
	list-style: none;
	padding: 0;
	display: grid;
	margin: 0.375rem;
}

body#dir.rows ul.directory-listing {
 	width: 100%;
	grid-template-columns: repeat(auto-fill, minmax(12.5rem, 1fr));
}

body#dir.columns ul.directory-listing {
	grid-auto-flow: column;
	grid-template-rows: repeat(auto-fill, minmax(1.6875rem, auto));
	grid-template-columns: repeat(auto-fill, minmax(12.5rem, 1fr));
	scroll-snap-type: x mandatory;
	scroll-padding: 0 1rem;
	height: calc(100% - 1rem);
}

ul.directory-listing > li {
	padding: 0.25rem;
	min-width: 12.5rem;
	scroll-snap-align: start;
	/* overflow ellipsis no wrap or whatever */
	position: relative;
}
ul.directory-listing > li > a {
	position: absolute;
	display: flex;
	flex-direction: row;
	width: 100%;
	height: fit-content;
}
ul.directory-listing > li > a > .name {
	display: inline-block;
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}

/* on hover, show all with a background color and z-index */
ul.directory-listing > li:hover > a > .icon,
ul.directory-listing > li:focus-within > a > .icon {
	display: inline-block;
	z-index: 2;
}
ul.directory-listing > li:hover > a > .name,
ul.directory-listing > li:focus-within > a > .name {
	background: var(--focus);
	z-index: 1;
	overflow: visible;
	margin: -0.25rem;
	padding: 0.25rem;
	border-radius: 0.25rem;
	white-space: nowrap;
}

/*
.icon {
	margin-right: 0.625rem;
}
*/

body {
	display: flex;
/*	overflow: hidden; */
}

body > div.messages_wrap {
	overflow: auto;
	flex-basis: 8.0rem;
	flex-grow: 1;
	flex-shrink: 0;
}

body:not(.compact) > div.messages_wrap {
	border-radius: 0.375rem;
}

body:not(.images) img:not(.layout) {
	display: none;
}

body:not(.images) img.layout {
	visibility: hidden;
}

body:not(.images) img.layout {
	opacity: 0;
	pointer-events: none;
}

body.blur > :not(.overlay) img {
  filter: blur(24px);
  clip-path: inset(0);
}

body.blur > :not(.overlay) img:hover {
  filter: none;
  clip-path: none;
}

body:not(.alt) .alt {
	display: none;
}
body:not(.images):not(.alt) .image {
	display: none;
}

body:not(.rendered_source) :is(.language-latex, .language-dot, .language-mermaid) {
	display: none;
}

code.language-latex:has(+ span.katex) {
    margin-right: 0.5rem;
}

body.canvas > div.canvas {
	display: block;
	overflow: auto;
	min-width: 5.5rem;
	min-height: 5.5rem;
	width: 100%;
	height: 100%;
	flex-grow: 0;
	border-radius: 0.375rem;
	flex-basis: 8.0rem;
	flex-shrink: 0;
}
body:not(.canvas) div.canvas {
	display: none;
}
body:not(.canvas.messages) div.resizer {
	display: none;
}
body.canvas:not(.messages) div.canvas {
	min-height: 100% !important;
	min-width: 100% !important;
}

body:not(.messages) > div.messages_wrap {
	display: none;
}

body.clean div.message.specialist {
	display: none;
}

body.clean div.message.invoke-specialist {
	display: none;
}

body.clean div.message.narrative div.label {
	display: none;
}

body.grab > div.messages_wrap {
	border: 0.0625rem solid #800000;
}

span.indent {
	white-space: pre-wrap;
}

body.portrait {
	flex-direction: column;
}
body.portrait > div.messages_wrap {
	order: 30;
}
body.portrait > div.canvas {
	order: 10;
	max-height: calc(100vh - 5.5rem);
}

body.landscape div.messages_wrap {
	order: 10;
}
body.landscape > div.canvas {
	order: 30;
}

.resizer {
	order: 20;
	min-height: var(--pad);
	min-width: var(--pad);
	margin: 0;
	background: var(--frame);
	touch-action: none;
}

body.portrait .resizer {
	cursor: ns-resize;
}

body.landscape .resizer {
	cursor: ew-resize;
}

body.script_source .content:has(script, style):not(.hide, [src]) {
	position: relative;
}

body:not(.script_source) .content :has(+ script:not(.hide, [src]))::after {
	content: "<script/>";
	display: block;
	font-weight: normal;
	margin-left: 1rem;
}

/*
pre:has(div.graphviz), pre:has(div.mermaid) {
	display: inline-block;
	margin: 0 1.25rem 2.5rem 0;
}
*/

.graphviz, .mermaid {
	overflow: auto;
}

/*
.graphviz > *, .mermaid > * {
	max-width: calc(100vw - 4 * var(--pad)) !important;
	max-height: calc(100vh - 4 * var(--pad)) !important;
}
*/

/*
.content script::before {
	content: "<script>";
}
.content script::after {
	content: "</script>";
}
*/

p:has(> img) {
	clear: both;
}
.message > .content > .label:first-child:has(+ img, + video, + audio, + iframe, + pre, + div.image, + div > div.image, + div > div.embed),
.message > .content > p:first-of-type > .label:first-child:has(+ img, + video, + audio, + iframe, + pre, + div.image, + div > div.image, +div > div.embed) {
	display: block;
}

.image_size_1 {
	--image-width: 10vw;
	--image-height: 10vh;
}
.image_size_2 {
	--image-width: 20vw;
	--image-height: 20vh;
}
.image_size_3 {
	--image-width: 30vw;
	--image-height: 30vh;
}
.image_size_4 {
	--image-width: 40vw;
	--image-height: 40vh;
}
.image_size_5 {
	--image-width: 50vw;
	--image-height: 50vh;
}
.image_size_6 {
	--image-width: 60vw;
	--image-height: 60vh;
}
.image_size_7 {
	--image-width: 70vw;
	--image-height: 70vh;
}
.image_size_8 {
	--image-width: 80vw;
	--image-height: 80vh;
}
.image_size_9 {
	--image-width: 90vw;
	--image-height: 90vh;
}
.image_size_10 {
	--image-width: 100vw;
	--image-height: 100vh;
}

:has(> code) {
	position: relative;
}

script + .code-controls {
	top: 0;
}

body.dark .code-controls {
	border: 0.0625rem solid rgba(255,255,255,0.2);
	background: rgba(255,255,255,0.1);
}

body.light .code-controls {
	border: 0.0625rem solid rgba(0,0,0,0.2);
	background: rgba(0,0,0,0.1);
}

.code-controls {
	position: absolute;
	right: 0;
	top: 0;
	display: none;
	z-index: 1;
	align-items: center;
	background: rgba(255,255,255,0.05);
	border-radius: 0 0 0 0.25rem;
	border: none !important;
}

.code-controls .language {
	padding: 0.1875rem 0.375rem;
}

/*
.code-controls button {
	border-radius: 0.3125rem;
	font-size: 1.2rem;
}
*/

.graphviz > svg {
	pointer-events: none;
}

link[href*="/katex@"] + style {
    display: none !important;
}

/* show chat in columns! make it optional */
body.columns div.messages {
	column-count: auto;
	column-width: 29.9375rem;
	column-gap: 1rem;
	height: 100%;
	max-height: 100%;
	column-fill: auto;
}
body.compact:not(.compact2).columns div.messages {
	column-width: 28.5rem;
}
body.columns .message {
	max-width: 100%;
}
.message p {
	break-inside: avoid;
}

body.columns .message * {
	max-width: 100%;
}

body.columns .message :is(.graphviz, .mermaid) {
	max-width: auto;
}

body.compact2 div.messages {
	padding: 0;
	column-gap: 0;
}

body.compact div.content {
	margin-left: 0;
}

body.compact div.messages code,
body.compact div.messages code.hljs {
	padding: 0 !important;
	border: 0;
/*	background-clip: padding-box;
	border-right: 0.125rem solid transparent; */
	box-shadow: inset -0.125rem 0 0 var(--background);
}

body.columns.compact div.messages code,
body.columns.compact div.messages code.hljs {
	width: 30.0rem;
	min-width: 30.0rem;
	overflow: visible;
}

body.columns.compact:not(.compact2) div.messages code,
body.columns.compact:not(.compact2) div.messages code.hljs {
	width: 29.25rem;
	min-width: 29.25rem;
}

.clear {
	clear: both;
}

.show-flex {
	display: flex;
}

/* tables ----------------------------------------------------------------- */

th, td {
	height: 1.5rem;
	max-height: 1.5rem;
	overflow: hidden;
	text-overflow: ellipsis;
}

is:(th, td):hover {
	overflow: visible;
	background: var(--background);
}

.embed:has(iframe) {
	z-index: 10;
}

/* message IDs ------------------------------------------------------------ */

div.message {
	position: relative;
}

div.message > div.id {
	display: none;
	position: absolute;
	top: -1rem;
	right: 0;
	font-size: 0.8rem;
}

body.ids div.message > div.id {
	display: block;
}

body.ids-hover div.message:hover > div.id,
body.ids-hover div.message.select > div.id {
	display: block;
}

blockquote {
	border-left: 0.125rem solid var(--primary);
	padding-left: 1rem;
	margin-left: 0;
	clear: left;
}

/* printing --------------------------------------------------------------- */

@media print {
	:root {
		--text: black !important;
		--link: black !important;
		--frame: white;
		--border: white;
	}
	body#messages > div.messages_wrap {
		background: white !important;
		color: black;
		border-radius: 0 !important;
		overflow: hidden !important;
	}
	html, body {
		background: white !important;
		height: auto !important;
		min-height: 100% !important;
		overflow: visible !important;
		color: black;
	}
	.code-controls {
		display: none !important;
	}
}

@media screen {
	body.print {
		display: none;
	}
}

/* limit visible items ---------------------------------------------------- */

/*
.search tbody tr:nth-child(n + (var(--visible-items) + 1)),
div.search div:nth-child(n + (var(--visible-items) + 1)) {
	display: none;
}
*/

body.items_0 .search > div,
body.items_1 .search > div:nth-child(n + 2),
body.items_2 .search > div:nth-child(n + 3),
body.items_3 .search > div:nth-child(n + 4),
body.items_4 .search > div:nth-child(n + 5),
body.items_5 .search > div:nth-child(n + 6),
body.items_6 .search > div:nth-child(n + 7),
body.items_7 .search > div:nth-child(n + 8),
body.items_8 .search > div:nth-child(n + 9),
body.items_9 .search > div:nth-child(n + 10) {
  display: none;
}
/* body.items_10 .search > div:nth-child(n + 11) { */
/* 10 or more means unlimited */

body.items_0 .search tbody > tr,
body.items_1 .search tbody > tr:nth-child(n + 2),
body.items_2 .search tbody > tr:nth-child(n + 3),
body.items_3 .search tbody > tr:nth-child(n + 4),
body.items_4 .search tbody > tr:nth-child(n + 5),
body.items_5 .search tbody > tr:nth-child(n + 6),
body.items_6 .search tbody > tr:nth-child(n + 7),
body.items_7 .search tbody > tr:nth-child(n + 8),
body.items_8 .search tbody > tr:nth-child(n + 9),
body.items_9 .search tbody > tr:nth-child(n + 10) {
  display: none;
}

body.dark .active { background-color: #606030 !important; }
body.light .active { background-color: #b0b058 !important; color: black !important; }

/* background image ------------------------------------------------------- */

body#messages {
    position: relative;
}
body#messages::before {
	content: "";
	background: var(--background-image) no-repeat center center fixed;
	background-size: cover;
	opacity: var(--background-image-opacity);
	position: absolute;
	top: 0;
	left: 0;
	bottom: 0;
	right: 0;
	z-index: -1;
}

/* selection and hidden checkboxes ---------------------------------------- */

body:not(.select) input[type="checkbox"].select {
	position: absolute;
	width: 1px;
	height: 1px;
	padding: 0;
	margin: -1px;
	overflow: hidden;
	clip: rect(0, 0, 0, 0);
	border: 0;
}

/* RTL support ------------------------------------------------------------ */

/*
.message .content:has(*[dir="rtl"]) {
    text-align: right;
    direction: rtl;
}
*/

/* Target first or second paragraph if it has dir=rtl */
.message .content > p:first-child[dir="rtl"] ~ .label,
.message .content > p:first-child + p[dir="rtl"] ~ .label {
    float: right !important;
    margin-left: 1rem !important;
    margin-right: 0 !important;
}

/* Move message ID to left side when first or second paragraph is RTL */
.message:has(> .content > p:first-child[dir="rtl"]) > .id,
.message:has(> .content > p:first-child + p[dir="rtl"]) > .id {
    right: auto;
    left: 0;
}

/* page breaks ------------------------------------------------------------ */

.bb, div.narrative :is(h1, h2, h3):not(.nb) {
	break-before: page;
}
.ba {
	break-after: page;
}

@keyframes blink {
  0%, 75% { visibility: visible; }
  75.1%, 100% { visibility: hidden; }
}

blink {
  animation: blink 1s step-start infinite;
}

@media (prefers-reduced-motion: reduce) {
  blink {
    animation: none;
  }
}

/* bouncing messages ------------------------------------------------------ */

.bouncing-message {
  position: fixed !important;
  max-width: 300px;
  z-index: 1;
  background-color: var(--background);
  padding: 0 1rem;
  border-radius: 0.5rem;
  border: 0.125rem solid var(--border);
}

/* spinning elements ------------------------------------------------------ */

.spin, .spin0 {
  display: inline-block;
  animation: spin0 4s linear infinite;
  transform-origin: 50% 50%;
}

.spin1 {
  display: inline-block;
  animation: spin1 4s linear infinite;
  transform-origin: 50% 50%;
}

@keyframes spin0 {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

@keyframes spin1 {
  from { transform: rotate(360deg); }
  to { transform: rotate(0deg); }
}
