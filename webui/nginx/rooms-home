server {
	server_name rooms.ucm.dev rooms-home.ucm.dev;

	charset UTF-8;

	listen 80;
	listen [::]:80;

	# SSL configuration

	listen 443 ssl;
	listen [::]:443 ssl;

	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332

	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782

	ssl_certificate /etc/letsencrypt/live/ucm.dev/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/ucm.dev/privkey.pem;

	root /www/allemande/rooms/;
	index index.html;

	location / {
		auth_basic "Auth";
		auth_basic_user_file /www/allemande/.htpasswd;
		autoindex on;
		try_files $uri $uri/ =404;
# TODO if we want strong privacy
#		access_log off;
#		error_log /dev/null;
	}

	location /stream {
		auth_basic "Auth";
		auth_basic_user_file /www/allemande/.htpasswd;
		proxy_pass http://127.0.0.1:8001;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto https;
		proxy_set_header Authorization "";
		proxy_set_header X-Forwarded-User $remote_user;

		# settings for streaming response
		gzip off;
		proxy_http_version 1.1;
		proxy_buffering off;
		proxy_set_header Connection "";
		proxy_read_timeout 120s;
	}

	location /logout {
		auth_basic "Auth";
		auth_basic_user_file /www/allemande/static/logout/.htpasswd;
		autoindex on;
		try_files $uri $uri/ =404;
#		access_log off;
#		error_log /dev/null;
	}

	include /etc/nginx/mime.types;

	types {
		text/plain                                   md markdown;
		# should be text/markdown, but the browser won't show it (Firefox)
	}
}
